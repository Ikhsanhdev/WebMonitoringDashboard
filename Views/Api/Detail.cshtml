@{
    ViewData["Title"] = "Tabel Monitoring";
}

@model IEnumerable<Api>

<main id="main" class="main">
    <div class="pagetitle">
        <h1 style="color: white; margin-top: 30px; margin-left: 25px;"></h1>
        <nav>
            <ol class="breadcrumb" style="margin-left: 25px;">
                <li class="breadcrumb-item"><a asp-controller="Api" asp-action="Index">Dashboard</a></li>
                <li class="breadcrumb-item active">Tabel Monitoring</li>
            </ol>
        </nav>
    </div>

    <!-- Filter Detail -->
    <div class="card">
        <div class="card-body">
            <div class="row gx-3">
                <div class="col-md-4 mb-3 mb-md-0">
                    <h6 class="mb-3">Tipe Pos :</h6>
                    <div class="col">
                        <select id="tipeFilter" class="form-select text-dark mb-3">
                            <option value="semua">SEMUA</option>
                            <option value="AWLR">PDA (AWLR)</option>
                            <option value="ARR">PCH (ARR)</option>
                            <option value="AWS">Klimatologi (AWS)</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-4 mb-3 mb-md-0">
                    <h6 class="mb-3">Status :</h6>
                    <div class="col">
                        <select id="statusFilter" class="form-select text-dark">
                            <option value="all">SEMUA</option>
                            <option value="online">ONLINE</option>
                            <option value="offline">OFFLINE</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-4 mb-3 mb-md-0 d-flex align-items-end justify-content-end">
                    <button id="exportBtn" class="btn btn-success">Export to Excel</button>
                </div>
            </div>
        </div>
    </div>

    <br>

    <div class="card mb-3">
        <div class="card-header">
            <h4 class="card-title mb-0 text-white"><i class="fa fa-water me-1"></i></h4>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="offpos" class="display table table-sm table-bordered table-responsive-sm">
                    <thead>
                        <tr>
                            <th class="text-center">No.</th>
                            <th class="text-center">Nama Pos</th>
                            <th class="text-center">Device ID</th>
                            <th class="text-center">Status</th>
                            <th class="text-center">Tipe</th>
                            <th class="text-center">Reading At</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Data rows will be populated here -->
                    </tbody>
                </table>
            </div>
            <div id="lastUpdateTime" style="margin-top: 10px; color: gray;"></div>
        </div>
    </div>
</main>

@section Scripts {
    <!-- Include necessary libraries -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.3/xlsx.full.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

     <script>
        $(document).ready(function () {
            var balaiName = '';

            // Function to update card color and text based on filter status
            function updateCardStatus(status) {
                var cardHeader = $(".card-header");
                var cardTitle = $(".card-title");

                if (status === 'online') {
                    cardHeader.css('background', '#28a745');
                    cardTitle.text('ONLINE').removeClass('text-white').addClass('text-white');
                } else if (status === 'offline') {
                    cardHeader.css('background', '#dc3545');
                    cardTitle.text('OFFLINE').removeClass('text-white').addClass('text-white');
                } else {
                    cardHeader.css('background', '#007bff');
                    cardTitle.text('SEMUA').removeClass('text-white').addClass('text-white');
                }
            }

            // Fetching data and initializing the table
            var fetchData = function(organizationCode) {
                return $.ajax({
                    url: '/Api/GetStationByOrgCode?orgCode=' + organizationCode,
                    method: 'GET',
                    dataType: 'json'
                });
            };

            const urlParams = new URLSearchParams(window.location.search);
            const orgParam = urlParams.get('orgCode');

            fetchData(orgParam).done(function(response) {
                var result = JSON.parse(response);
                const data = result.data;

                //menampilkan nama balai
                balaiName = data.length > 0 ? data[0].balaiName : "";
                $("h1").text(balaiName);

                var body = $("#offpos tbody");
                body.empty();
                let i = 1;

                $.each(data, function(index, item) {
                    var row = $("<tr>");
                    row.append($("<td class='text-center'>").text(i++));
                    row.append($("<td>").text(item.slug));
                    row.append($("<td class='text-center'>").text(item.deviceId));

                    // Default status offline and check last reading date
                    var status = 'offline';
                    var readingAt = '';
                    var today = moment().startOf('day');

                    // Get the readingAt timestamp
                    if (item.arrLastReading && item.arrLastReading.readingAt) {
                        readingAt = item.arrLastReading.readingAt;
                    } else if (item.awlrLastReading && item.awlrLastReading.readingAt) {
                        readingAt = item.awlrLastReading.readingAt;
                    } else if (item.awsLastReading && item.awsLastReading.readingAt) {
                        readingAt = item.awsLastReading.readingAt;
                    } else if (item.awlrArrLastReading && item.awlrArrLastReading.readingAt) {
                        readingAt = item.awlrArrLastReading.readingAt;
                    }

                    // Determine online/offline status based on readingAt
                    if (readingAt && moment(readingAt).isSame(today, 'day')) {
                        status = 'online';
                    }

                    var statusText = $("<td>").text(status);
                    statusText.css({
                        'color': status === 'offline' ? 'red' : 'green',
                        'text-align': 'center'
                    });
                    row.append(statusText);

                    row.append($("<td class='text-center'>").text(item.stationType));
                    var formattedDate = readingAt ? moment(readingAt).format("DD-MM-YYYY HH:mm") : 'Tidak Ada Data';
                    row.append($("<td class='text-center'>").text(formattedDate));

                    body.append(row);
                });

                // Set initial card status based on default filter values
                var defaultStatus = $("#statusFilter").val();
                updateCardStatus(defaultStatus);
            });

            // Event handler for export button
            $('#exportBtn').click(function() {
                const table = document.getElementById('offpos');
                const ws = XLSX.utils.table_to_sheet(table);
                const wb = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(wb, ws, "Monitoring Data");
                XLSX.writeFile(wb, `monitoring_data.xlsx`);
            });

            $("#statusFilter").change(function() {
                var selectedStatus = $(this).val();
                var selectedType = $("#tipeFilter").val();
                filterData(selectedType, selectedStatus);
                updateCardStatus(selectedStatus); // Update card status based on selected filter
            });

            $("#tipeFilter").change(function() {
                var selectedType = $(this).val();
                var selectedStatus = $("#statusFilter").val();
                filterData(selectedType, selectedStatus);
                updateCardStatus(selectedStatus); // Update card status based on selected filter
            });

            function filterData(type, status) {
                var rows = $("#offpos tbody tr");
                rows.show();

                if (type !== 'semua') {
                    rows.filter(function() {
                        var typeCell = $(this).find("td:eq(4)");
                        return !typeCell.text().toLowerCase().includes(type.toLowerCase());
                    }).hide();
                }

                // Filter by status
                if (status !== 'all') {
                    rows.filter(function() {
                        var statusCell = $(this).find("td:eq(3)").text().toLowerCase();
                        return statusCell !== status;
                    }).hide();
                }

                // Update row numbers
                rows.each(function(index) {
                    $(this).find("td:eq(0)").text(index + 1);
                });
            }

            // Initial filter application on page load
            var defaultStatus = $("#statusFilter").val();
            var defaultType = $("#tipeFilter").val();
            filterData(defaultType, defaultStatus);
            updateCardStatus(defaultStatus); // Update card status on initial load
        });
    </script>
}