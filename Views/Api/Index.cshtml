} @{
    ViewData["Title"] = "Home | Dashboard";
}

@model IEnumerable<Api>

<main id="main" class="main mt-1">
  
 <!-- Kontainer peta -->

    <div id="maps">
    </div>

    <!-- Memindahkan elemen tile ke dalam peta -->
    <div class="tile_overlay tile-overlay1">
        <div class="tile_stats tile-stats1 ">
            <span class="count_top"><i class="fa fa-tint" style="color:blue;"></i> Pos Duga Air</span>
            <div class="count" id="totalDugaAir"></div>
        </div>
        <div class="tile_stats tile-stats1">
            <span class="count_top"><i class="fa fa-cloud-showers-heavy" style="color:rgb(134, 203, 225);"></i> Pos Curah Hujan</span>
            <div class="count" id="totalCurahHujan"></div>
        </div>
        <div class="tile_stats tile-stats1">
            <span class="count_top"><i class="fa fa-cloud-sun" style="color:rgb(238, 211, 63);"></i> Pos Klimatologi</span>
            <div class="count" id="totalKlimatologi"></div>
        </div>
    </div>
</div>

<!-- Kontainer tile tambahan -->
<div class="tile_overlay tile-overlay2">
    <div class="tile_stats tile-stats2">
        <span class="count_top"><i class="fa fa-wifi" style="color:green;"></i> Total Online</span>
        <div class="count" id="totalOnline"></div>
    </div>
    <div class="tile_stats tile-stats2">
        <span class="count_top"><i class="fa fa-times-circle" style="color:red;"></i> Total Offline</span>
        <div class="count" id="totalOffline"></div>
    </div>
    <div class="tile_stats tile-stats2">
        <span class="count_top"><i class="fa fa-map-marker-alt" style="color:rgb(185, 7, 135);"></i> Total POS</span>
        <div class="count" id="totalPos"></div>
    </div>
    <div class="tile_stats tile-stats2">
        <span class="count_top"><i class="fa fa-building" style="color:brown;"></i> Total Instansi</span>
        <div class="count" id="totalInstansi"></div>
    </div>
</div>
<div class="table-overlay" id="tableOverlay">
    <div class="card mb-3" id="instansiContainer">
        <div class="card-body">
            <h5 class="instansi-title">
                Informasi Instansi
                <button class="btn btn-link" id="toggleTableBtn" style="float: right;">
                    <i class="bi bi-table" id="toggleIcon"></i>
                </button>
            </h5>
            <div class="table-responsive" id="instansiTable">
                <table id="offpos" class="table table-sm table-bordered w-100">
                    <thead>
                        <tr>
                            <th class="text-center">No.</th>
                            <th class="text-center">Nama Instansi</th>
                            <th class="text-center">Sub Domain</th>
                            <th class="text-center">Pos Online</th>
                            <th class="text-center">Pos Offline</th>
                            <th class="text-center">Total Pos</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        <!-- Data dari API akan dimasukkan ke sini -->
                    </tbody>
                </table>
            </div>
            <div id="lastUpdateTime" style="margin-top: 10px; color: gray;"></div>
        </div>
    </div>
</div>
</main>

@section Scripts {
    <!-- Include jQuery and Moment.js -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <!-- Include DataTables -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            // Fungsi untuk memperbarui jumlah pos
            function updateTotals() {
                // Panggil endpoint untuk total duga air
                $.ajax({
                    url: '/Api/GetTotalData',
                    type: 'POST',
                    data: { totalType: 'totalDugaAir' },
                    success: function(response) {
                        $('#totalDugaAir').text(response.total);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                        $('#totalDugaAir').text('Error');
                    }
                });

                $.ajax({
                    url: '/Api/GetTotalData',
                    type: 'POST',
                    data: { totalType: 'totalCurahHujan' },
                    success: function(response) {
                        $('#totalCurahHujan').text(response.total);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                        $('#totalCurahHujan').text('Error');
                    }
                });

                $.ajax({
                    url: '/Api/GetTotalData',
                    type: 'POST',
                    data: { totalType: 'totalKlimatologi' },
                    success: function(response) {
                        $('#totalKlimatologi').text(response.total);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                        $('#totalKlimatologi').text('Error');
                    }
                });

                $.ajax({
                    url: '/Api/GetTotalData',
                    type: 'POST',
                    data: { totalType: 'totalOnline' },
                    success: function(response) {
                        $('#totalOnline').text(response.total);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                        $('#totalOnline').text('Error');
                    }
                });

                $.ajax({
                    url: '/Api/GetTotalData',
                    type: 'POST',
                    data: { totalType: 'totalOffline' },
                    success: function(response) {
                        $('#totalOffline').text(response.total);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                        $('#totalOffline').text('Error');
                    }
                });

                $.ajax({
                    url: '/Api/GetTotalData',
                    type: 'POST',
                    data: { totalType: 'totalPos' }, // Parameter untuk total pos
                    success: function(response) {
                        $('#totalPos').text(response.total);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                        $('#totalPos').text('Error');
                    }
                });

                $.ajax({
                    url: '/Api/GetTotalData',
                    type: 'POST',
                    data: { totalType: 'totalInstansi' },
                    success: function(response) {
                        $('#totalInstansi').text(response.total);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                        $('#totalInstansi').text('Error');
                    }
                });
                // Lanjutkan dengan pemanggilan untuk total lainnya...
            }

            // Panggil fungsi untuk memperbarui jumlah total saat halaman dimuat
            updateTotals();

            // Function to refresh DataTable and update last update time
            function refreshDataTable() {
                $('#offpos').DataTable().ajax.reload(null, false);
                updateLastUpdateTime();
            }

            // Function to update last update time
            function updateLastUpdateTime() {
                var now = new Date();
                var formattedTime = moment(now).format("DD-MM-YYYY HH:mm:ss");

                // Get the last update time from the Ajax response
                $.ajax({
                    url: '/Api/GetLastUpdateTime', // Replace with the appropriate URL
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        var lastUpdateTimeString = response.lastUpdateTime; // Replace with the correct property name
                        if (lastUpdateTimeString) {
                            var lastUpdateTime = moment(lastUpdateTimeString, "YYYY-MM-DDTHH:mm:ssZ");
                            formattedTime = lastUpdateTime.format("DD-MM-YYYY HH:mm:ss");
                        }

                        // Use the correct ID here
                        $('#lastUpdateTime').text('Last Updated : ' + formattedTime);
                    },
                    error: function (error) {
                        console.error('Error getting last update time:', error);
                    }
                });
            }

           // Mengambil data dari API dan menampilkannya dalam card
            var dataTable = $('#offpos').DataTable({
                "processing": true,
                "serverSide": true,
                "responsive": true,
                "info": true,
                "infoCallback": function (settings, start, end, max, total, pre) {
                    return "Showing " + (start) + " to " + end + " of " + total + " entries";
                },
                "ajax": {
                    "url": "/Api/GetList",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "nomor", "name": "Nomor", "autoWidth": true, "className": "text-center" },
                    { "data": "balaiName", "name": "balaiName", "autoWidth": true },
                    {
                        "data": "subDomainOld",
                        "render": function (data, type, row) {
                            return '<a href="https://' + row.subDomainOld + '.higertech.com" target="_blank" style="text-decoration: none;">' + row.subDomainOld + '</a>';
                        },
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center"
                    },
                    { "data": "jumlahPosOnline", "name": "JumlahPosOnline", "autoWidth": true, "className": "text-center" },
                   {
                        "data": "jumlahPosOffline",
                        "render": function (data, type, row) {
                            return '<a href="/Api/JsonDetail?orgCode=' + row.organizationCode + '" style="text-decoration: none;">' + data + '</a>';
                        },
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center"
                    },
                    {
                        "data": "jumlahPos",
                        "render": function (data, type, row) {
                            return '<a href="/Api/Detail?orgCode=' + row.organizationCode + '" style="text-decoration: none;">' + data + '</a>';
                        },
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center"
                    }
                ]
            });
            // Set up auto-refresh using setInterval
            var autoRefreshInterval = setInterval(function () {
                refreshDataTable();
            }, 300000); // 5 minutes in milliseconds

            // Stop auto-refresh when the page is unloaded
            $(window).on('beforeunload', function () {
                clearInterval(autoRefreshInterval);
            });

            // Initial update of last update time
            updateLastUpdateTime();
        });

   document.addEventListener("DOMContentLoaded", function() {
    var table = document.getElementById('instansiTable');  // Tabel yang akan ditampilkan/disembunyikan
    var icon = document.getElementById('toggleIcon');      // Ikon untuk toggle
    var tableOverlay = document.querySelector('.table-overlay');  // Overlay

    // Awalnya, pastikan tabel disembunyikan
    table.style.display = "none";  // Awal tabel tidak ditampilkan

    // Event untuk toggle tabel saat ikon diklik
    icon.addEventListener('click', function() {
        if (table.style.display === "none") {
            table.style.display = "block";  // Tampilkan tabel
            icon.classList.remove('bi-table');  // Ganti ikon ke yang lain
            icon.classList.add('bi-tablet-landscape');  // Ikon baru
            tableOverlay.classList.add('expanded');  // Tambahkan kelas overlay jika diperlukan
        } else {
            table.style.display = "none";  // Sembunyikan tabel
            icon.classList.remove('bi-tablet-landscape');  // Kembalikan ikon ke yang asli
            icon.classList.add('bi-table');  // Ikon asli
            tableOverlay.classList.remove('expanded');  // Hapus kelas overlay jika diperlukan
        }
    });



    // Event untuk visibilitychange (saat pindah tab browser)
    document.addEventListener('visibilitychange', function() {
        if (document.visibilityState === 'hidden') {
            // Sembunyikan tabel dan reset ikon jika tab browser tidak aktif
            table.style.display = "none";  
            icon.classList.remove('bi-tablet-landscape');  // Reset ikon
            icon.classList.add('bi-table');  // Ikon asli
            tableOverlay.classList.remove('expanded');  // Hapus kelas overlay
        }
    });
});

    </script>
}
@* h *@