@model IEnumerable<Tiket>

@{
    Layout = null; // Mengatur layout menjadi null agar tidak ada layout yang diaplikasikan pada halaman ini
}
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ticket</title>
    <!-- Bootstrap CSS versi 5 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <!-- Link Font Awesome dari CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha384-oS8R9D9gtTAQ8dMWDRA0VxK1gBkT5cE6w8dQB91Rud5J2z0O" crossorigin="anonymous"> 
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <!-- Link ke CSS tambahan -->
    <link href="~/assets/css/style.css" rel="stylesheet">
    <link href="~/assets/img/hgt.png" rel="icon">
    <link href="~/assets/img/hgt.png" rel="apple-touch-icon">

</head>
<body style="background-color: #e4eefa;">
    <!-- Navbar -->
        <nav class="navbar navbar-expand navbar-custom fixed-top">
            <div class="container-fluid">
                <!-- Logo atau nama aplikasi -->
                <a class="navbar-brand" href="#" style="color: white; font-weight: bold;">Ticket App</a>
                
                <!-- Navbar Konten -->
                @if (User.Identity.IsAuthenticated)
                {
                    <ul class="navbar-nav ms-auto d-flex align-items-center">
                        <!-- Dropdown untuk User -->
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false" style="color: white;">
                                <img src="~/assets/img/av1.png" alt="Profile Image" class="rounded-circle" style="width: 30px; margin-right: 5px;">
                                @User.Identity.Name
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                                <li><a class="dropdown-item" href="/Tiket/Index">Home</a></li>
                                <li><a class="dropdown-item" asp-area="" asp-controller="Akun" asp-action="Logout">Log Out</a></li>
                            </ul>
                        </li>
                    </ul>
                }
            </div>
        </nav>
        <!-- Section Header -->
        <div class="container-fluid px-3 mt-4 mb-3"style="padding-top: 50px;">
            <div class="d-flex align-items-center justify-content-between">
                <h1 class="h5 m-0" style="padding-left: 10px;">Tickets</h1>
                <div class="header-buttons d-flex align-items-center">
                    <a href="/Tiket/Create" class="btn btn-primary btn-sm uniform-button">Create Ticket</a>
                <div class="dropdown">
                <button class="btn btn-light btn-sm uniform-button d-flex align-items-center" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-filter me-2"></i> Filters
                    <i class="fas fa-chevron-right ms-2"></i>
                </button>
                <ul class="dropdown-menu" aria-labelledby="filterDropdown" style="min-width: 200px;">
                    <li>
                        <a class="dropdown-item d-flex align-items-center" href="?filter=all">
                            <i class="fas fa-th-large me-2"></i> Semua Tipe
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item d-flex align-items-center" href="?filter=processing">
                            <i class="fas fa-spinner me-2"></i> Processing
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item d-flex align-items-center" href="?filter=resolved">
                            <i class="fas fa-check-circle me-2"></i> Resolved
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item d-flex align-items-center" href="?filter=pending">
                            <i class="fas fa-clock me-2"></i> Pending
                        </a>
                    </li>
                </ul>
            </div>
            <button class="btn btn-light btn-sm uniform-button d-flex align-items-center" onclick="location.reload()">
                <i class="fas fa-sync-alt"></i> Refresh
            </button>
        </div>
    </div>
</div>

    <!-- Konten Card Ticket -->
    <hr class="content-separator">
    <div class="container my-4 mt-4">
        @if (!Model.Any())
        {
            <!-- Jika tidak ada data tiket -->
            <div class="text-center">
                <img src="@Url.Content("~/assets/ikon/work.svg")" alt="No records found" style="max-width: 300px;">
                <h4>No ticket found for this user </h4>
                <p>Try changing the filters, or rephrasing your search.</p>
            </div>
        }
        else
        {
    <div class="card-container">
        @foreach (var tiket in Model)
        {
            <div class="ticket-card" data-id="@tiket.id">
                @if (!string.IsNullOrEmpty(tiket.gambar))
                {
                    <img src="@Url.Content(tiket.gambar)" alt="Gambar Tiket" />
                }
                else
                {
                    <img src="~/assets/img/default.png" alt="Tidak ada gambar" />
                }
                <div class="card-body">
                    <h5 class="card-title">@tiket.subject</h5>
                    <p class="card-text"><strong>Instansi:</strong> @tiket.instansi</p>
                    <p class="card-text"><strong>Deskripsi:</strong> @tiket.deskripsi</p>
                    <p class="card-text"><strong>CreatedAt:</strong> @tiket.CreatedAt.ToString("dd MMM yyyy HH:mm:ss")</p>
                    <p>
                    <strong>Status:</strong> 
                    <span class="badge status-badge 
                        @(string.IsNullOrEmpty(tiket.status) ? "bg-danger" : 
                            (tiket.status == "Resolved" ? "bg-success" : 
                            (tiket.status == "Processing" ? "bg-warning" : "bg-danger")) )">
                        @(string.IsNullOrEmpty(tiket.status) ? "Pending" : tiket.status)
                    </span>
                    </p>
                    <button class="btn btn-primary view-detail-btn mt-2" 
                        data-instansi="@tiket.instansi" 
                        data-subject="@tiket.subject" 
                        data-deskripsi="@tiket.deskripsi" 
                        data-gambar="@Url.Content(tiket.gambar ?? "~/assets/img/default.png")">
                        View Details
                    </button>
                </div>
            </div>
        }
    </div>        
    }
</div>
<!-- Modal untuk notifikasi -->
<div class="modal fade" id="notifModal" tabindex="-1" aria-labelledby="notifModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow border-0 text-center" style="border-radius: 15px; background-color: #00d37b;">
            <div class="modal-body p-4">
                <h5 class="text-success fw-bold">Tiket berhasil dibuat!</h5>
            </div>
        </div>
    </div>
</div>
    <!-- Modal untuk Detail Tiket -->
    <div class="modal fade" id="ticketDetailModal" tabindex="-1" aria-labelledby="ticketDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ticketDetailModalLabel">Detail Tiket</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Instansi:</strong> <span id="detail-instansi"></span></p>
                    <p><strong>Subject:</strong> <span id="detail-subject"></span></p>
                    <p><strong>Deskripsi:</strong> <span id="detail-deskripsi"></span></p>
                    <p><strong>Gambar:</strong></p>
                    <img id="detail-gambar" src="" alt="Gambar Tiket" class="img-fluid" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript Bootstrap 5 -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- JavaScript untuk menampilkan modal notifikasi -->
    <script>
        window.onload = function() {
        let successMessage = '@(TempData["SuccessMessage"] ?? "")';
        let errorMessage = '@(TempData["ErrorMessage"] ?? "")';
        let modalElement = document.getElementById('notifModal');
        let modal = new bootstrap.Modal(modalElement);

        if (successMessage.trim() !== "") {
            document.querySelector("#notifModal .modal-content").classList.add("modal-success");
            document.querySelector("#notifModal .modal-body").innerHTML = `<span>${successMessage}</span>`;
            modal.show();

            // Sembunyikan modal setelah 5 detik
            setTimeout(() => {
                modal.hide();
            }, 5000);
        } else if (errorMessage.trim() !== "") {
            document.querySelector("#notifModal .modal-body").innerHTML = `<span class="text-danger">${errorMessage}</span>`;
            modal.show();

            // Sembunyikan modal setelah 5 detik
            setTimeout(() => {
                modal.hide();
            }, 3000);
        }
    };
    </script>
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        // Seleksi semua tombol detail
        const detailButtons = document.querySelectorAll(".view-detail-btn");

        detailButtons.forEach(button => {
            button.addEventListener("click", function () {
                // Ambil data dari tombol
                const instansi = this.getAttribute("data-instansi");
                const subject = this.getAttribute("data-subject");
                const deskripsi = this.getAttribute("data-deskripsi");
                const gambar = this.getAttribute("data-gambar");

                // Masukkan data ke dalam modal
                document.getElementById("detail-instansi").innerText = instansi;
                document.getElementById("detail-subject").innerText = subject;
                document.getElementById("detail-deskripsi").innerText = deskripsi;
                document.getElementById("detail-gambar").src = gambar;

                // Tampilkan modal
                const modal = new bootstrap.Modal(document.getElementById("ticketDetailModal"));
                modal.show();
            });
        });
    });
</script>
    <script>
        function updateCardStatus(ticketId, status) {
        const card = document.querySelector(`[data-id="${ticketId}"]`);
        if (card) {
            const statusBadge = card.querySelector('.status-badge');
            if (statusBadge) {
                statusBadge.textContent = status;

                // Hapus semua kelas warna
                statusBadge.classList.remove('bg-success', 'bg-warning', 'bg-danger');

                // Tambahkan warna berdasarkan status
                if (status === "Resolved") {
                    statusBadge.classList.add('bg-success');
                } else if (status === "Processing") {
                    statusBadge.classList.add('bg-warning'); // Warna kuning untuk processing
                } else {
                    statusBadge.classList.add('bg-danger'); // Default untuk status lainnya
                }
            }
        }
    }

document.addEventListener("DOMContentLoaded", function () {
        const resolveButtons = document.querySelectorAll(".resolve-btn");

        resolveButtons.forEach(button => {
            button.addEventListener("click", function () {
                const ticketId = this.getAttribute("data-id");

                fetch(`/Tiket/UpdateStatus`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ id: ticketId, status: "Resolved" })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        updateCardStatus(ticketId, "Resolved");
                    } else {
                        alert("Gagal mengupdate tiket.");
                    }
                })
                .catch(error => console.error("Error:", error));
            });
        });
    });
    </script>    
</body>
</html>
